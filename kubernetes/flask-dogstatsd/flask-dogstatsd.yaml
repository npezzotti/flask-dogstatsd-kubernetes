apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-dogstatsd
  labels: 
    app: flask-dogstatsd
spec:
  selector:
    matchLabels: 
      app: flask-dogstatsd
  replicas: 2
  strategy: 
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flask-dogstatsd
        admission.datadoghq.com/enabled: "true"
      annotations:
        ad.datadoghq.com/nginx.check_names: '["nginx"]'
        ad.datadoghq.com/nginx.init_configs: '[{}]'
        ad.datadoghq.com/nginx.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
        ad.datadoghq.com/flask-dogstatsd.logs: '[{"source": "python", "service": "flask-dogstatsd"}]'
    spec:
      containers:
      - name: flask-dogstatsd
        image: flask-dogstatsd:1.0.0
        imagePullPolicy: IfNotPresent
        ports: 
          - containerPort: 5000
        env:
          - name: FLASK_ENV
            value: "production"
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 80
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/status.conf
            subPath: status.conf
      - name: curl
        image: curlimages/curl
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c", "while [ true ]; do sleep 2; curl http://127.0.0.1:80; done"]
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config-map
---
apiVersion: v1
kind: Service
metadata: 
  name: flask-dogstatsd-service
  labels: 
    app: flask-dogstatsd
  annotations:
    ad.datadoghq.com/service.check_names: '["http_check"]'
    ad.datadoghq.com/service.init_configs: '[{}]'
    ad.datadoghq.com/service.instances: |
      [
        {
          "name": "flask-dogstatsd-service",
          "url": "http://%%host%%:30002",
          "min_collection_interval": 60
        }
      ]
spec:
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30002
    protocol: TCP
    name: nginx-reverse-proxy
  selector: 
    app: flask-dogstatsd
  type: NodePort
